{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["App","Sample","props","state","addClass","this","setState","lineClass","push","className","join","onClick","toggle","bind","React","Component","Sample2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAe,I,YCyBAA,IC8CTC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,UAAU,GAFP,E,0CAInB,WACEC,KAAKC,SAAS,CAACF,UAAWC,KAAKF,MAAMC,a,oBAEvC,WACE,IAAIG,EAAY,CAAC,QAIjB,OAHGF,KAAKF,MAAMC,UACZG,EAAUC,KAAK,OAGb,qBAAKC,UAAWF,EAAUG,KAAK,KAAMC,QAASN,KAAKO,OAAOC,KAAKR,MAA/D,SAAuEA,KAAKF,MAAMC,SAAW,uGAAyG,4E,GAdzLU,IAAMC,WAmBrBC,E,kDACJ,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,UAAU,GAFP,E,0CAInB,WACEC,KAAKC,SAAS,CAACF,UAAWC,KAAKF,MAAMC,a,oBAEvC,WACE,IAAIG,EAAY,CAAC,QAIjB,OAHGF,KAAKF,MAAMC,UACZG,EAAUC,KAAK,OAGb,qBAAKC,UAAWF,EAAUG,KAAK,KAAMC,QAASN,KAAKO,OAAOC,KAAKR,MAA/D,SAAuEA,KAAKF,MAAMC,SAAW,mFAAqF,8H,GAdpKU,IAAMC,WAsB5BE,IAASC,OACP,eAAC,IAAMC,WAAP,WAEE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.08af357c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\n// TEST BUILD DECEMBER\n\n// import React, { useState } from \"react\";\n\n\n\n\nconst initialState = {}\n \n\n// function testroom1reducer(state, action) {\n//   switch (action.type) {\n//     case 'action_1':\n//       return { ...state, first_action: action.answer };\n//     case 'action_2':\n//       return { ...state, second_action: action.answer };\n//     default: \n//       throw new Error();\n//   }\n// }\n\n// function Choose1() {\n//   const [state, dispatch] = useReducer(testroom1reducer, initialState);\n//   return (\n//     <>\n//      <div>\n//       <h2>What are you gonna do?</h2>\n//       <button onClick={() => dispatch({type: 'action_1', answer: 'eat' })}>Eat</button>\n//       <button onClick={() => dispatch({type: 'action_1', answer: 'puke' })}>Puke</button>\n//      </div>\n//      {state.first_action !== undefined && \n//       <>\n//         <p>You decided to {state.first_action}.</p>\n//         {state.first_action === 'puke' && \n//           <>\n//             <h2>How are you going to clean yourself up?</h2>\n//             <button onClick={() => dispatch({type: 'action_2', answer: 'shower' })}>Shower</button>\n//             <button onClick={() => dispatch({type: 'action_2', answer: 'call mom' })}>Call Mom</button>\n//           </>\n//         }\n//       </>\n//      }\n//      {state.second_action !== undefined && \n//       <p>You then decided to {state.second_action}.</p>\n//      }\n//     </>\n//   );\n// }\n\n// const ButtonExample = () => {\n//   const [status, setStatus] = useState(false);\n\n//   return (\n//     <div className=\"textline\" onClick={() => \n//     setStatus(!status)}>\n//       {`${status ? 'By the time your body was found I had already written it that way' : 'When my body is found, the snow will have fallen like a killstreak, and the world will know peace.'}`}\n      \n//     </div>\n    \n//   );\n// };\n\nclass Sample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addClass: false}\n  }\n  toggle() {\n    this.setState({addClass: !this.state.addClass});\n  }\n  render() {\n    let lineClass = [\"line\"];\n    if(this.state.addClass) {\n      lineClass.push('red');\n    }\n    return(\n        <div className={lineClass.join(' ')} onClick={this.toggle.bind(this)}>{this.state.addClass ? \"When my body is found, the snow will have fallen like a killstreak, and the world will know peace.  \" : \"By the time your body was found I had already written it that way. \"}</div>       \n    );\n  }\n}\n\nclass Sample2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addClass: false}\n  }\n  toggle() {\n    this.setState({addClass: !this.state.addClass});\n  }\n  render() {\n    let lineClass = [\"line\"];\n    if(this.state.addClass) {\n      lineClass.push('red');\n    }\n    return(\n        <div className={lineClass.join(' ')} onClick={this.toggle.bind(this)}>{this.state.addClass ? \"Written this way across your resting percocet face in the drainedout LCD hale.  \" : \"You were writing too but in smaller and smaller sentences and more and more quickly until your words were like snow. \"}</div>       \n    );\n  }\n}\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Choose1 /> */}\n    <Sample />\n    <Sample2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}